{
  "name": "Ren'Py",
  "scopeName": "source.renpy",
  "firstLineMatch": "^#!/.*\\brenpy\\b",
  "patterns": [
    { "include": "#comments" },
    { "include": "#python-statements" },
    { "include": "#expressions" }
  ],
  "repository": {
    "python-statements": {
      "name": "embedded.python",
      "patterns": [
        {
          "comments": "Renpy python block",
          "name": "embedded.python.block",
          "begin": "^(init\\s-?\\d?\\s?)?(python:)",
          "beginCaptures": {
            "0": {
              "patterns": [{ "include": "#renpy-keywords" }]
            }
          },
          "end": "^(?=\\S)",
          "patterns": [{ "include": "source.python" }]
        },
        {
          "comment": "Match begin and end of python one line statements",
          "name": "embedded.python.one-line",
          "begin": "(?<=(\\$|define|default)\\s)",
          "end": "\\R$",
          "patterns": [{ "include": "source.python" }]
        },
        {
          "comment": "Match renpy python one line statements",
          "match": "^\\s*(\\$|define|default)\\s",
          "name": "keyword.renpy"
        }
      ]
    },
    "renpy-keywords": {
      "patterns": [
        {
          "match": "\\b(init|python)\\b",
          "name": "keyword.control.renpy"
        }
      ]
    },
    "codetags": {
      "match": "(?:\\b(NOTE|XXX|HACK|FIXME|BUG|TODO)\\b)",
      "captures": { "1": { "name": "keyword.codetag.notation.renpy" } }
    },
    "comments": {
      "name": "comment.line.number-sign.renpy",
      "begin": "(\\#)",
      "beginCaptures": {
        "1": { "name": "punctuation.definition.comment.renpy" }
      },
      "end": "($)",
      "patterns": [{ "include": "#codetags" }]
    },
    "expressions": {
      "patterns": [{ "include": "#strings" }]
    },
    "strings": {
      "patterns": [
        { "include": "#string-quoted-double" },
        { "include": "#string-quoted-single" },
        { "include": "#string-quoted-back" }
      ]
    },
    "string-quoted-double": {
      "patterns": [
        {
          "comment": "double quoted block string",
          "name": "string.quoted.double.block.renpy",
          "begin": "(\"\"\")",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.string.begin.renpy" }
          },
          "end": "((?<=\"\"\")(\")\"\"|\"\"\")",
          "endCaptures": {
            "1": { "name": "punctuation.definition.string.end.renpy" },
            "2": { "name": "meta.empty-string.double.block.renpy" }
          }
        },
        {
          "comment": "Dobule quoted single line string",
          "name": "string.quoted.double.line.renpy",
          "begin": "(\")",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.string.begin.renpy" }
          },
          "end": "((?<=\")(\")|\")",
          "endCaptures": {
            "1": { "name": "punctuation.definition.string.end.renpy" },
            "2": { "name": "meta.empty-string.double.renpy" },
            "3": { "name": "invalid.illegal.unclosed-string.renpy" }
          }
        }
      ]
    },
    "string-quoted-single": {
      "patterns": [
        {
          "comment": "Single quoted block string",
          "name": "string.quoted.single.block.renpy",
          "begin": "(''')",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.string.begin.renpy" }
          },
          "end": "((?<=''')('|''')|''')",
          "endCaptures": {
            "1": { "name": "punctuation.definition.string.end.renpy" },
            "2": { "name": "meta.empty-string.single.block.renpy" }
          }
        },
        {
          "comment": "Single quoted single line string",
          "name": "string.quoted.single.line.renpy",
          "begin": "(')",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.string.begin.renpy" }
          },
          "end": "((?<=')(')|')",
          "endCaptures": {
            "1": { "name": "punctuation.definition.string.end.renpy" },
            "2": { "name": "meta.empty-string.single.renpy" },
            "3": { "name": "invalid.illegal.unclosed-string.renpy" }
          }
        }
      ]
    },
    "string-quoted-back": {
      "patterns": [
        {
          "comment": "Back quoted block string",
          "name": "string.quoted.back.block.renpy",
          "begin": "(```)",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.string.begin.renpy" }
          },
          "end": "((?<=```)(`)``|```)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.string.end.renpy" },
            "2": { "name": "meta.empty-string.back.block.renpy" }
          }
        },
        {
          "comment": "Back quoted single line string",
          "name": "string.quoted.back.line.renpy",
          "begin": "(`)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.string.begin.renpy" }
          },
          "end": "((?<=`)(`)|`)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.string.end.renpy" },
            "2": { "name": "meta.empty-string.back.renpy" },
            "3": { "name": "invalid.illegal.unclosed-string.renpy" }
          }
        }
      ]
    }
  }
}
